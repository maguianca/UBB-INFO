     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  ; declare external functions needed by our program
     6                                  extern exit, fopen, fread, fclose, printf
     7                                  import exit msvcrt.dll  
     8                                  import fopen msvcrt.dll  
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0
    15 00000009 00                 
    16 0000000A 7200                        mod_acces db "r", 0
    17 0000000C 00000000                    descriptor_fisier dd 0
    18                                      
    19 00000010 01000000                    dimensiune dd 1
    20 00000014 64000000                    count dd 100
    21                                  
    22 00000018 <res 00000064>              sir resb 100
    23 0000007C 00000000                    lungime_sir dd 0
    24 00000080 FF                          cifra_max db -1
    25                                      
    26 00000081 256420202000                format_afisare db "%d   ", 0
    27 00000087 0A000000                    zece dd 10
    28                                      
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; FILE * fopen(const char* nume_fisier, const char * mod_acces)
    33 00000000 68[0A000000]                    push dword mod_acces
    34 00000005 68[00000000]                    push dword nume_fisier
    35 0000000A FF15[00000000]                  call [fopen]
    36 00000010 83C408                          add esp, 4 * 2
    37                                          
    38 00000013 83F800                          cmp EAX, 0
    39 00000016 0F8482000000                    je final
    40                                          
    41 0000001C A3[0C000000]                    mov [descriptor_fisier], EAX
    42                                          
    43                                          ; int fread(void * str, int size, int count, FILE * stream)
    44 00000021 FF35[0C000000]                  push dword [descriptor_fisier]
    45 00000027 FF35[14000000]                  push dword [count]
    46 0000002D FF35[10000000]                  push dword [dimensiune]
    47 00000033 68[18000000]                    push dword sir
    48 00000038 FF15[00000000]                  call [fread]
    49 0000003E 83C410                          add esp, 4*4
    50                                          
    51 00000041 A3[7C000000]                    mov [lungime_sir], EAX
    52                                          
    53 00000046 BE[18000000]                    mov esi, sir
    54 0000004B 8B0D[7C000000]                  mov ecx, [lungime_sir]
    55 00000051 FC                              cld
    56 00000052 E33B                            jecxz iesireBucla
    57                                          
    58 00000054 B800000000                      mov eax, 0
    59                                          
    60                                          bucla:
    61 00000059 50                                  push eax
    62 0000005A AC                                  lodsb ; AL
    63 0000005B 88C3                                mov BL, AL
    64 0000005D 58                                  pop eax
    65                                              
    66 0000005E 80FB20                              cmp BL, ' '
    67 00000061 7414                                je afisareNumar
    68                                              
    69 00000063 80FB00                              cmp BL, 0
    70 00000066 740F                                je afisareNumar
    71                                              
    72 00000068 F725[87000000]                      mul dword [zece]
    73 0000006E 80EB30                              sub BL, '0'
    74 00000071 00D8                                add AL, BL
    75                                              
    76                                              finalBucla:
    77 00000073 E2E4                                loop bucla
    78                                          
    79 00000075 EB18                            jmp iesireBucla
    80                                          afisareNumar:
    81 00000077 51                              push ECX
    82                                          
    83 00000078 50                              push EAX
    84 00000079 68[81000000]                    push dword format_afisare
    85 0000007E FF15[00000000]                  call [printf]
    86 00000084 83C408                          add esp, 4*2
    87                                          
    88 00000087 B800000000                      mov eax, 0
    89                                          
    90 0000008C 59                              pop ECX
    91 0000008D EBE4                            jmp finalBucla
    92                                          
    93                                          iesireBucla:
    94                                          
    95                                          ; int printf(const char * format, variabila_1);
    96                                          ; GRESIT: push dword [cifra_max]
    97                                          
    98                                          
    99                                          ; int fclose(FILE * descriptor)
   100 0000008F FF35[0C000000]                  push dword [descriptor_fisier]
   101 00000095 FF15[00000000]                  call [fclose]
   102 0000009B 83C404                          add esp, 4
   103                                          
   104                                          
   105                                          final:
   106                                          ; exit(0)
   107 0000009E 6A00                            push    dword 0      
   108 000000A0 FF15[00000000]                  call    [exit]       
   109                                          
   110                                          
   111                                          
   112                                          
   113                                          
   114                                          
   115                                          
   116                                          
   117                                          
