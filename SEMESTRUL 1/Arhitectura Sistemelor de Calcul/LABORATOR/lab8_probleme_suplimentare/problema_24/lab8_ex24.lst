     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fread,fclose,fopen,fwrite
     8                                  import exit msvcrt.dll    
     9                                  import fread msvcrt.dll    
    10                                  import fclose msvcrt.dll    
    11                                  import fopen msvcrt.dll    
    12                                  import fwrite msvcrt.dll    
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 772B00                      mod_acces db "w+",0
    16 00000003 657832342E74787400          nume_fisier db "ex24.txt",0
    17 0000000C FFFFFFFF                    descriptor_fisier dd -1
    18 00000010 64000000                    count dd 100
    19 00000014 01000000                    dimensiune dd 1
    20 00000018 00<rept>                    sir times 100 db 0
    21 0000007C 00<rept>                    result times 100 db 0
    22 000000E0 00000000                    len dd 0
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[00000000]                    push dword mod_acces
    28 00000005 68[03000000]                    push dword nume_fisier 
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp,4*2
    31                                          
    32 00000013 83F800                          cmp eax,0
    33 00000016 7469                            je finalizare_scriere
    34 00000018 A3[0C000000]                    mov [descriptor_fisier],eax
    35                                          
    36 0000001D FF35[0C000000]                  push dword[descriptor_fisier]
    37 00000023 FF35[10000000]                  push dword [count]
    38 00000029 FF35[14000000]                  push dword[dimensiune]
    39 0000002F 68[18000000]                    push dword sir
    40 00000034 FF15[00000000]                  call [fread]
    41 0000003A 83C410                          add esp,4*4
    42                                          
    43 0000003D 83F800                          cmp eax,0
    44 00000040 743F                            je finalizare_scriere
    45 00000042 A3[E0000000]                    mov dword[len],eax
    46 00000047 8B0D[E0000000]                  mov ecx,dword[len]
    47 0000004D BE[18000000]                    mov esi,sir
    48 00000052 BF[7C000000]                    mov edi,result
    49                                      bucla:
    50 00000057 AC                              lodsb 
    51 00000058 3C39                            cmp al,'9'
    52 0000005A 7706                            ja peste
    53 0000005C 3C30                            cmp al,'0'
    54 0000005E 7202                            jb peste
    55 00000060 B043                            mov al,'C'
    56                                          peste:
    57 00000062 AA                              stosb
    58 00000063 E2F2                            loop bucla
    59                                          
    60 00000065 FF35[0C000000]                  push dword[descriptor_fisier]
    61 0000006B FF35[E0000000]                  push dword[len]
    62 00000071 6A01                            push dword 1
    63 00000073 68[7C000000]                    push dword result
    64 00000078 FF15[00000000]                  call [fwrite]
    65 0000007E 83C410                          add esp,4*4
    66                                      
    67                                      finalizare_scriere:
    68 00000081 FF35[0C000000]                  push dword [descriptor_fisier]
    69 00000087 FF15[00000000]                  call [fclose]
    70 0000008D 83C404                          add esp,4
    71                                          
    72 00000090 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 00000092 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
