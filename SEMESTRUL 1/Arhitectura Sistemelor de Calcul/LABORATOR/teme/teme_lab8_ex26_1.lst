     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  ;EX:26 Se citesc de la tastatura doua numere a si b. Sa se calculeze valoarea expresiei (a-b)*k, k fiind o constanta definita in segmentul ;de date. Afisati valoarea expresiei (in baza 16).
     6                                  ; declare external functions needed by our program
     7                                  
     8                                  extern exit,printf,scanf             
     9                                  import exit msvcrt.dll 
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll  
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 08000000                    k dd 8
    16 00000004 00000000                    a dd 0
    17 00000008 00000000                    b dd 0
    18 0000000C 00000000                    rez dd 0
    19 00000010 2564256400                  format db "%d","%d",0
    20 00000015 257800                      mesaj db "%x",0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ;citire
    26 00000000 68[08000000]                    push dword b
    27 00000005 68[04000000]                    push dword a
    28 0000000A 68[10000000]                    push dword format
    29 0000000F FF15[00000000]                  call [scanf]
    30 00000015 83C40C                          add esp, 4*3
    31                                          
    32 00000018 A1[04000000]                    mov eax,[a]
    33 0000001D 2B05[08000000]                  sub eax,[b]
    34 00000023 F725[00000000]                  mul dword [k]
    35 00000029 A3[0C000000]                    mov [rez],eax
    36                                          ;afisare
    37 0000002E FF35[0C000000]                  push dword[rez]
    38 00000034 68[15000000]                    push dword mesaj
    39 00000039 FF15[00000000]                  call [printf]
    40 0000003F 83C408                          add esp, 4*2
    41                                      
    42                                          ; exit(0)
    43 00000042 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000044 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
