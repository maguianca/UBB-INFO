     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  ;ex:11 Sa se citeasca de la tastatura un numar in baza 16 si sa se afiseze valoarea acelui numar in baza 10.
     6                                  ;Exemplu: Se citeste: 1D; se afiseaza: 29
     7                                  
     8                                  extern exit,printf,scanf             
     9                                  import exit msvcrt.dll 
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll  
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 00000000                    n dd 0
    16 00000004 257800                      format db "%x",0
    17 00000007 4E756D6172756C2069-         mesaj db "Numarul in baza 10 este:%d",0
    17 00000010 6E2062617A61203130-
    17 00000019 20657374653A256400 
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;citire
    23 00000000 68[00000000]                    push dword n
    24 00000005 68[04000000]                    push dword format
    25 0000000A FF15[00000000]                  call [scanf]
    26 00000010 83C408                          add esp,4*2
    27                                          
    28                                          ;afisare
    29 00000013 FF35[00000000]                  push dword[n]
    30 00000019 68[07000000]                    push dword mesaj
    31 0000001E FF15[00000000]                  call [printf]
    32 00000024 83C408                          add esp,4*2
    33                                      
    34                                          ; exit(0)
    35 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
