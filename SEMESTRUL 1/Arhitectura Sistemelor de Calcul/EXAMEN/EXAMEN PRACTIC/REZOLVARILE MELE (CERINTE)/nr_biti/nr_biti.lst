     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fread,fclose,fopen,printf,fscanf
     8                                  import exit msvcrt.dll  
     9                                  import fclose msvcrt.dll  
    10                                  import fopen msvcrt.dll  
    11                                  import fread msvcrt.dll  
    12                                  import printf msvcrt.dll  
    13                                  import fscanf msvcrt.dll  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 696E7075742E747874-         nume_fisier db "input.txt",0
    16 00000009 00                 
    17 0000000A 7200                        mod_acces db "r",0
    18 0000000C FF                          descriptor_fisier db -1
    19 0000000D 64000000                    count dd 100
    20 00000011 01000000                    dimensiune dd 1
    21 00000015 <res 00000064>              sir resb 100
    22 00000079 00000000                    nr dd 0
    23 0000007D 00000000                    len dd 0
    24 00000081 257800                      format_citire db "%x",0
    25 00000084 00000000                    x dd 0
    26 00000088 25582D25640D0A00            format_afisare db "%X-%d",13,10,0
    27                                  
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31 00000000 68[0A000000]                    push dword mod_acces 
    32 00000005 68[00000000]                    push dword nume_fisier 
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp,4*2
    35                                          
    36 00000013 83F800                          cmp eax,0
    37 00000016 745D                            je finalizare_scriere
    38 00000018 A3[0C000000]                    mov [descriptor_fisier],eax
    39                                          
    40                                      repeta:
    41                                      
    42 0000001D 68[84000000]                    push dword x
    43 00000022 68[81000000]                    push dword format_citire
    44 00000027 FF35[0C000000]                  push dword[descriptor_fisier]
    45 0000002D FF15[00000000]                  call [fscanf]
    46 00000033 83C40C                          add esp,4*3
    47                                          
    48 00000036 83F801                          cmp eax,1
    49 00000039 753A                            jnz finalizare_scriere
    50                                          
    51 0000003B B800000000                      mov eax,0
    52 00000040 BB00000000                      mov ebx,0
    53 00000045 A1[84000000]                    mov eax,dword[x]
    54 0000004A 89C2                            mov edx,eax
    55 0000004C B920000000                      mov ecx,32
    56                                      numara:
    57 00000051 D1E0                            shl eax,1
    58 00000053 83D300                          adc ebx,0
    59 00000056 E2F9                        loop numara
    60 00000058 891D[79000000]                  mov dword[nr],ebx
    61                                          
    62 0000005E FF35[79000000]                  push dword [nr]
    63 00000064 52                              push dword edx
    64 00000065 68[88000000]                    push dword format_afisare
    65 0000006A FF15[00000000]                  call [printf]
    66 00000070 83C40C                          add esp,4*3
    67                                          
    68 00000073 EBA8                            jmp repeta
    69                                          
    70                                      finalizare_scriere:
    71 00000075 FF35[0C000000]                  push dword [descriptor_fisier]
    72 0000007B FF15[00000000]                  call [fclose]
    73 00000081 83C404                          add esp,4
    74                                          
    75 00000084 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    76 00000086 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
