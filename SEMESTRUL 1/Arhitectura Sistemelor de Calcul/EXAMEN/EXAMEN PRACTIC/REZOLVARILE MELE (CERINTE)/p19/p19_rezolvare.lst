     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fclose,fopen,fprintf,scanf,printf
     8                                  import exit msvcrt.dll    
     9                                  import scanf msvcrt.dll    
    10                                  import fprintf msvcrt.dll    
    11                                  import fopen msvcrt.dll    
    12                                  import fclose msvcrt.dll    
    13                                  import printf msvcrt.dll    
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 00000000                    n dd 0
    17 00000004 7700                        mod_acces db "w",0
    18 00000006 6F75747075742E7478-         nume_fisier db "output.txt",0
    18 0000000F 7400               
    19 00000011 00000000                    descriptor_fisier dd 0
    20                                      
    21 00000015 00<rept>                    cuvant times 100 db 0
    22 00000079 00000000                    len dd 0
    23 0000007D 25732000                    format_afisare db "%s ",0
    24 00000081 256300                      format_citire db "%c",0
    25 00000084 <res 00000064>              text resb 100
    26 000000E8 25640D0A00                  format db "%d",13,10,0
    27 000000ED 6E3D00                      mesaj db "n=",0
    28                                  
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      reset:
    32 00000000 60                              pushad
    33 00000001 BF[15000000]                    mov edi,cuvant
    34 00000006 B964000000                      mov ecx,100
    35 0000000B B000                            mov al,0
    36 0000000D F3AA                            rep stosb
    37 0000000F 61                              popad 
    38 00000010 C3                              ret
    39                                      start:
    40 00000011 68[ED000000]                    push mesaj
    41 00000016 FF15[00000000]                  call [printf]
    42 0000001C 83C404                          add esp,4
    43                                          
    44 0000001F 68[00000000]                    push dword n
    45 00000024 68[E8000000]                    push dword format
    46 00000029 FF15[00000000]                  call [scanf]
    47 0000002F 83C408                          add esp,4*2
    48                                          
    49 00000032 68[04000000]                    push dword mod_acces
    50 00000037 68[06000000]                    push dword nume_fisier 
    51 0000003C FF15[00000000]                  call [fopen]
    52 00000042 83C408                          add esp,4*2
    53                                          
    54 00000045 83F800                          cmp eax,0
    55 00000048 7448                            je finalizare_scriere
    56 0000004A A3[11000000]                    mov [descriptor_fisier],eax
    57                                          
    58                                      urmator:
    59 0000004F E8ACFFFFFF                      call reset
    60 00000054 C705[79000000]0000-             mov dword[len],0
    60 0000005C 0000               
    61 0000005E BF[15000000]                    mov edi,cuvant
    62                                      citire:
    63 00000063 68[84000000]                    push dword text
    64 00000068 68[81000000]                    push dword format_citire
    65 0000006D FF15[00000000]                  call [scanf]
    66 00000073 83C408                          add esp,4*2
    67                                          
    68 00000076 B800000000                      mov eax,0
    69 0000007B A0[84000000]                    mov al,byte[text]
    70 00000080 3C23                            cmp al,'#'
    71 00000082 740E                            je finalizare_scriere
    72 00000084 3C20                            cmp al,' '
    73 00000086 7421                            je afis
    74 00000088 AA                              stosb 
    75 00000089 8305[79000000]01                add dword[len],1
    76 00000090 EBD1                            jmp citire
    77                                  
    78                                      finalizare_scriere:
    79 00000092 FF35[11000000]                  push dword [descriptor_fisier]
    80 00000098 FF15[00000000]                  call [fclose]
    81 0000009E 83C404                          add esp,4
    82 000000A1 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    83 000000A3 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    84                                      afis:
    85 000000A9 60                              pushad
    86 000000AA A1[00000000]                    mov eax,dword[n]
    87 000000AF 3905[79000000]                  cmp dword[len],eax
    88 000000B5 723A                            jb peste
    89 000000B7 B800000000                      mov eax,0
    90 000000BC BB00000000                      mov ebx,0
    91 000000C1 BE[15000000]                    mov esi,cuvant 
    92 000000C6 FC                              cld
    93 000000C7 AC                              lodsb;inc automat
    94 000000C8 4E                              dec esi
    95 000000C9 88C3                            mov bl,al
    96 000000CB 0335[79000000]                  add esi,dword[len]
    97 000000D1 4E                              dec esi
    98 000000D2 AC                              lodsb 
    99 000000D3 38D8                            cmp al,bl 
   100 000000D5 751A                            jne peste
   101                                          
   102 000000D7 FC                              cld
   103 000000D8 68[15000000]                    push dword cuvant
   104 000000DD 68[7D000000]                    push dword format_afisare
   105 000000E2 FF35[11000000]                  push dword [descriptor_fisier]
   106 000000E8 FF15[00000000]                  call [fprintf]
   107 000000EE 83C40C                          add esp,4*3
   108                                          
   109                                          peste:
   110 000000F1 61                              popad
   111 000000F2 E958FFFFFF                      jmp urmator
