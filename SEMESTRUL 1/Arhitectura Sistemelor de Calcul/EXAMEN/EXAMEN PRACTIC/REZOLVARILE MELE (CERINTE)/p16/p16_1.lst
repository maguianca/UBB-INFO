     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fclose,fopen,fread,printf
     8                                  import exit msvcrt.dll    
     9                                  import fclose msvcrt.dll    
    10                                  import fopen msvcrt.dll    
    11                                  import fread msvcrt.dll    
    12                                  import printf msvcrt.dll       
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 696E7075742E747874          nume_fisier db "input.txt"
    17 00000009 7200                        mod_acces db "r",0
    18 0000000B 00000000                    descriptor_fisier dd 0
    19                                      
    20 0000000F 00<rept>                    sir times 100 db 0
    21 00000073 01000000                    dimensiune dd 1
    22 00000077 64000000                    count dd 100
    23 0000007B 00000000                    nr dd 0
    24 0000007F 00000000                    len dd 0
    25 00000083 0A000000                    zece dd 10
    26 00000087 01000000                    suma dd 1
    27 0000008B 25642000                    format_afisare db "%d ",0
    28                                  
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32 00000000 68[09000000]                    push dword mod_acces
    33 00000005 68[00000000]                    push dword nume_fisier 
    34 0000000A FF15[00000000]                  call [fopen]
    35 00000010 83C408                          add esp,4*2
    36                                          
    37 00000013 83F800                          cmp eax,0
    38 00000016 746D                            je finalizare_scriere
    39 00000018 A3[0B000000]                    mov [descriptor_fisier],eax
    40                                          
    41 0000001D FF35[0B000000]                  push dword[descriptor_fisier]
    42 00000023 FF35[77000000]                  push dword[count]
    43 00000029 FF35[73000000]                  push dword[dimensiune]
    44 0000002F 68[0F000000]                    push dword sir 
    45 00000034 FF15[00000000]                  call [fread]
    46 0000003A 83C410                          add esp,4*4
    47                                          
    48 0000003D A3[7F000000]                    mov dword[len],eax
    49 00000042 BE[0F000000]                    mov esi,sir
    50 00000047 8B0D[7F000000]                  mov ecx,dword[len]
    51 0000004D E336                            jecxz finalizare_scriere
    52 0000004F FC                              cld
    53 00000050 B800000000                      mov eax,0
    54                                      repeta:
    55 00000055 50                              push eax
    56 00000056 AC                              lodsb 
    57 00000057 88C3                            mov bl,al
    58 00000059 58                              pop eax
    59                                          
    60 0000005A 80FB20                          cmp bl,' '
    61 0000005D 743D                            je afis
    62 0000005F 80FB00                          cmp bl,0
    63 00000062 740D                            je afisare_final
    64 00000064 F725[83000000]                  mul dword[zece]
    65 0000006A 80EB30                          sub bl,'0'
    66 0000006D 00D8                            add al,bl
    67                                          aici:
    68 0000006F E2E4                        loop repeta
    69                                      
    70                                      afisare_final:
    71 00000071 FF35[87000000]                  push dword[suma]
    72 00000077 68[8B000000]                    push dword format_afisare 
    73 0000007C FF15[00000000]                  call [printf]
    74 00000082 83C408                          add esp,4*2
    75                                         
    76                                      finalizare_scriere:
    77 00000085 FF35[0B000000]                  push dword [descriptor_fisier]
    78 0000008B FF15[00000000]                  call [fclose]
    79 00000091 83C404                          add esp,4
    80 00000094 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    81 00000096 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    82                                      
    83                                      afis:
    84 0000009C 83F808                          cmp eax,8
    85 0000009F 7206                            jb peste
    86 000000A1 0105[87000000]                  add dword[suma],eax
    87                                          peste:
    88 000000A7 B800000000                      mov eax,0
    89 000000AC EBC1                            jmp aici
