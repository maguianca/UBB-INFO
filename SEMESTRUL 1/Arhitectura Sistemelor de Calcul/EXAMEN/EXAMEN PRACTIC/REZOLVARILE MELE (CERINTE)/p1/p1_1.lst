     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fclose,fopen,fread,printf,fscanf
     8                                  import exit msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  import fscanf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 7200                        mod_acces db "r",0
    18 00000002 696E7075742E747874-         nume_fisier db "input.txt",0
    18 0000000B 00                 
    19 0000000C 00<rept>                    sir times 100 db 0
    20 00000070 64000000                    count dd 100
    21 00000074 01000000                    dimensiune dd 1
    22 00000078 00000000                    descriptor_fisier dd 0
    23 0000007C 00<rept>                    result times 100 db 0
    24 000000E0 00000000                    cifra dd 0
    25 000000E4 25632000                    afisare db "%c ",0
    26 000000E8 00000000                    len dd 0
    27 000000EC 257800                      format_citire db "%x",0
    28 000000EF 00000000                    n dd 0
    29 000000F3 09000000                    zece dd 9
    30 000000F7 25642000                    format_afisare db "%d ",0
    31                                  
    32                                  ; our code starts here
    33                                  segment code use32 class=code
    34                                      start:
    35 00000000 68[00000000]                    push dword mod_acces
    36 00000005 68[02000000]                    push dword nume_fisier 
    37 0000000A FF15[00000000]                  call [fopen]
    38 00000010 83C408                          add esp, 4*2
    39                                          
    40 00000013 83F800                          cmp eax,0
    41 00000016 7457                            je finalizare_scriere
    42 00000018 A3[78000000]                    mov [descriptor_fisier],eax
    43                                     citire:
    44 0000001D C705[E0000000]0900-             mov dword[cifra],9
    44 00000025 0000               
    45                                          
    46 00000027 68[EF000000]                    push dword n
    47 0000002C 68[EC000000]                    push dword format_citire
    48 00000031 FF35[78000000]                  push dword [descriptor_fisier]
    49 00000037 FF15[00000000]                  call [fscanf]
    50 0000003D 83C40C                          add esp,4*3
    51                                          
    52 00000040 83F801                          cmp eax,1
    53 00000043 752A                            jne finalizare_scriere
    54                                          
    55 00000045 A1[EF000000]                    mov eax,dword[n]
    56 0000004A BA00000000                      mov edx,0
    57                                       repeta:
    58 0000004F F735[F3000000]                  div dword[zece]
    59 00000055 3B15[E0000000]                  cmp edx,dword[cifra]
    60 0000005B 7706                            ja sare
    61 0000005D 8915[E0000000]                  mov [cifra],edx
    62                                          sare:
    63 00000063 83F800                          cmp eax,0
    64 00000066 741E                            je afis
    65 00000068 BA00000000                      mov edx,0
    66 0000006D EBE0                            jmp repeta
    67                                          
    68                                          
    69                                     finalizare_scriere:
    70 0000006F FF35[78000000]                  push dword[descriptor_fisier]
    71 00000075 FF15[00000000]                  call [fclose]
    72 0000007B 83C404                          add esp,4
    73                                          
    74 0000007E 6A00                            push dword 0
    75 00000080 FF15[00000000]                  call [exit]
    76                                      afis:
    77 00000086 FF35[E0000000]                  push dword [cifra]
    78 0000008C 68[F7000000]                    push dword format_afisare
    79 00000091 FF15[00000000]                  call[printf]
    80 00000097 83C40C                          add esp,4*3
    81 0000009A EB81                            jmp citire
